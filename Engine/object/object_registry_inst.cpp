
#include "object/object_registry_temp.cpp"

#include "asset/asset.h"
#include "assets/mesh.h"
#include "assets/material.h"
#include "assets/texture.h"
#include "renderer/cpu_renderer_base.h"
#include "renderers/cpu_renderer_reference.h"
#include "renderers/cpu_renderer_preview.h"
#include "renderers/cpu_renderer_faces.h"
#include "renderers/cpu_renderer_normals.h"
#include "hittables/scene.h"
#include "hittables/sphere.h"
#include "hittables/static_mesh.h"
#include "object/object.h"


#define OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(CLASS_NAME) \
  template ENGINE_API bool object_registry::add<CLASS_NAME>(CLASS_NAME* instance, const std::string& name); \
  template ENGINE_API CLASS_NAME* object_registry::get<CLASS_NAME>(int id) const; \
  template ENGINE_API CLASS_NAME* object_registry::find<CLASS_NAME>(const std::string& name); \
  template ENGINE_API std::vector<CLASS_NAME*> object_registry::get_all_by_type<CLASS_NAME>(); \
  template ENGINE_API CLASS_NAME* object_registry::copy_shallow<CLASS_NAME>(const CLASS_NAME* source); \
  template ENGINE_API CLASS_NAME* object_registry::copy_shallow<CLASS_NAME>(const CLASS_NAME* source, const std::string& name);

// FIX: This content should be automatically generated by the pre-compile script based on all the types defined in the code base
namespace engine
{
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(asset_base)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(static_mesh_asset)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(texture_asset)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(material_asset)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(cpu_renderer_base)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(cpu_renderer_reference)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(cpu_renderer_preview)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(cpu_renderer_faces)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(cpu_renderer_normals)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(hittable)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(scene)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(sphere)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(static_mesh)
  OBJECT_REGISTRY_EXPLICIT_INSTANTIATE(class_object)

  void object_registry::create_class_objects()
  {
    REGISTER_CLASS_OBJECT(object, object)
    REGISTER_CLASS_OBJECT(material_asset, asset_base)
    REGISTER_CLASS_OBJECT(texture_asset, asset_base)
    REGISTER_CLASS_OBJECT(static_mesh_asset, asset_base)
    REGISTER_CLASS_OBJECT(asset_base, object)
    REGISTER_CLASS_OBJECT(cpu_renderer_base, object)
    REGISTER_CLASS_OBJECT(cpu_renderer_preview, cpu_renderer_base)
    REGISTER_CLASS_OBJECT(cpu_renderer_normals, cpu_renderer_base)
    REGISTER_CLASS_OBJECT(cpu_renderer_faces, cpu_renderer_base)
    REGISTER_CLASS_OBJECT(cpu_renderer_reference, cpu_renderer_base)
    REGISTER_CLASS_OBJECT(hittable, object)
    REGISTER_CLASS_OBJECT(scene, hittable)
    REGISTER_CLASS_OBJECT(static_mesh, hittable)
    REGISTER_CLASS_OBJECT(sphere, hittable)
    REGISTER_CLASS_OBJECT(class_object, object)
  }
}

#undef OBJECT_REGISTRY_EXPLICIT_INSTANTIATE